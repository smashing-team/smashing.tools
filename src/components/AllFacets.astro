---
import { twMerge } from 'tailwind-merge';

import Facet from '@/components/Facet.astro';
import FacetSection from '@/components/FacetSection.astro';
import type { Facets } from '@/utils/facets';

interface Props {
  facets: Facets;
}

const { facets } = Astro.props;

const facetEntries = Object.entries(facets || {});
const filtered = facetEntries.some(([_, values]) =>
  values.some((val) => val.checked),
);
---

<div class="static mt-2 hidden h-full border-t px-4 pb-8 lg:block">
  {
    filtered && (
      <div class="group relative flex">
        <button
          id="clear-filters"
          class={twMerge(
            'absolute right-0 z-40 dark:bg-zinc-900 top-3.5 ml-auto inline-flex items-center rounded-full px-2.5 py-1 text-xs shadow-sm ring-1 ring-inset ring-zinc-200 hover:bg-zinc-600/5 dark:ring-zinc-800 dark:hover:bg-zinc-800/50',
          )}
        >
          <svg
            width="12"
            height="12"
            viewBox="0 0 15 15"
            fill="none"
            class="relative -left-0.5 mr-0.5"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z"
              fill="currentColor"
              fill-rule="evenodd"
              clip-rule="evenodd"
            />
          </svg>{' '}
          Clear
        </button>
      </div>
    )
  }
  {
    facetEntries.map(([facet, values]: any) => (
      <FacetSection title={facet}>
        {values?.map((f: any) => (
          <Facet
            key={facet}
            title={f.value}
            count={f.count}
            selected={f.checked}
            disabled={f.disabled}
          />
        ))}
      </FacetSection>
    ))
  }
</div>

<script>
  import Query from '@/utils/query';

  document.addEventListener('astro:page-load', () => {
    const clearFilters = document.getElementById('clear-filters');
    clearFilters?.addEventListener('click', () => {
      Query.clear();
    });
  });
</script>
