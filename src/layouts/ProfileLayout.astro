---
import { Image } from 'astro:assets';
import { type CollectionEntry, getCollection } from 'astro:content';
import { Icon } from 'astro-icon';

import GridList from '@/components/GridList.astro';
import Header from '@/components/Header.astro';
import ProfileHeaderGradient from '@/components/ProfileHeaderGradient.astro';
import CommandMenu from '@/components/react/CommandMenu';

import BaseHead from '../components/BaseHead.astro';

type Props = CollectionEntry<'profiles'>['data'] & {
  slug: CollectionEntry<'profiles'>['id'];
};

const { name, slug, avatar, twitter, github, website, bio } = Astro.props;

const starterKitItems =
  (await getCollection('starter-kit', (item) =>
    [item.data.publisher.id, item.data.maker.id].includes(slug),
  )) || [];
const designKitItems =
  (await getCollection('design-kit', (item) =>
    [item.data.publisher.id, item.data.maker.id].includes(slug),
  )) || [];
const uiComponentItems =
  (await getCollection('ui-component', (item) =>
    [item.data.publisher.id, item.data.maker.id].includes(slug),
  )) || [];

const allItems = [...starterKitItems, ...designKitItems, ...uiComponentItems];

const creatorItems = allItems.filter((item) => item.data.maker.id === slug);
const publishedItems = allItems.filter(
  (item) => item.data.publisher.id === slug,
);
const description =
  bio ||
  `${name}'s profile on smashing.tools. Find tools crafted and published by ${name}.`;
---

<html lang="en">
  <head>
    <BaseHead title={name} description={description} slug={slug} />
  </head>

  <body>
    <ProfileHeaderGradient />
    <div class="mx-auto h-full w-full max-w-2xl px-8">
      <Header />
      <header>
        <div class="hidden" data-pagefind-ignore>
          <CommandMenu client:idle />
        </div>
        <div class="relative z-10 mx-auto pb-4 pt-24">
          <div class="relative block w-24 overflow-hidden">
            <Image
              data-pagefind-meta="image[src], image_alt[alt]"
              class="w-full rounded-full"
              src={avatar}
              alt={name}
              width={200}
              height={200}
            />
          </div>
          <div class="mt-6 flex flex-col space-y-2 text-left">
            <h1
              class="text-2xl font-medium text-zinc-900 dark:text-zinc-50"
              data-pagefind-meta="name"
            >
              {name}
            </h1>
            {
              bio && (
                <p
                  class="text-base text-zinc-500 dark:text-zinc-400"
                  data-pagefind-meta="headline"
                >
                  {bio}
                </p>
              )
            }
            <div class="flex items-center gap-4">
              {
                twitter && (
                  <a
                    href={`https://twitter.com/${twitter}?ref=smashing.tools`}
                    class="inline-flex items-center gap-1 text-sm text-zinc-500 hover:underline dark:text-zinc-400"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      class="h-4 w-4"
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      stroke-width="2"
                      stroke="currentColor"
                      fill="none"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path d="M4 4l11.733 16h4.267l-11.733 -16z" />
                      <>
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <path d="M4 20l6.768 -6.768m2.46 -2.46l6.772 -6.772" />
                      </>
                    </svg>
                    {twitter}
                  </a>
                )
              }
              {
                github && (
                  <a
                    href={`https://github.com/${github}?ref=smashing.tools`}
                    class="inline-flex items-center gap-1 text-sm text-zinc-500 hover:underline dark:text-zinc-400"
                  >
                    <Icon name="tabler:brand-github" class="h-4 w-4" />
                    {github}
                  </a>
                )
              }
              {
                website && (
                  <a
                    target="_blank"
                    href={`${website}?ref=smashing.tools`}
                    class="inline-flex items-center gap-1 text-sm text-zinc-500 hover:underline dark:text-zinc-400"
                  >
                    {website}
                  </a>
                )
              }
            </div>
          </div>
        </div>
      </header>
      <main class="mt-4">
        {
          creatorItems.length ? (
            <div class="mb-10">
              <h2 class="mb-4 text-lg text-zinc-700 dark:text-zinc-100">
                Discover tools crafted by {name}
              </h2>
              <GridList full withoutPadding items={creatorItems} />
            </div>
          ) : null
        }
        {
          publishedItems.length ? (
            <div>
              <h2 class="mb-4 text-lg text-zinc-700 dark:text-zinc-100">
                Explore tools published by {name}
              </h2>
              <GridList full withoutPadding items={publishedItems} />
            </div>
          ) : null
        }
      </main>
    </div>
  </body>
</html>
